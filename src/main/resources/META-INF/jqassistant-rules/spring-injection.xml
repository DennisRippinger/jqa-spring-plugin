<jqa:jqassistant-rules xmlns:jqa="http://www.buschmais.com/jqassistant/core/analysis/rules/schema/v1.1">

    <group id="spring-injection:Default">
        <includeConstraint refId="spring-injection:InjectablesMustNotBeInstantiated"/>
        <includeConstraint refId="spring-injection:FieldsInitializedByConstructorMustNotBeManipulated"/>
    </group>

    <group id="spring-injection:Strict">
        <includeConstraint refId="spring-injection:FieldInjectionIsNotAllowed"/>
        <includeConstraint refId="spring-injection:ApplicationTypeMustNotImplementSpringInterface"/>
    </group>

    <concept id="spring-injection:Injectable">
        <requiresConcept refId="spring-component:Component"/>
        <requiresConcept refId="spring-injection:BeanMethod"/>
        <description>Returns all injectables.</description>
        <cypher><![CDATA[
            MATCH
              (injectable:Spring:Injectable)
            RETURN
              injectable as Injectable
        ]]></cypher>
    </concept>

    <concept id="spring-injection:BeanMethod">
        <requiresConcept refId="spring-component:Configuration"/>
        <description>Labels all return types of configuration methods which are annotated with
            "@org.springframework.context.annotation.Bean" with "Spring" and "Injectable".
        </description>
        <cypher><![CDATA[
           MATCH
              (configuration:Configuration)-[:DECLARES]->(method:Java:Method)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(annotationType:Type),
              (method)-[:RETURNS]->(injectable:Type)
            WHERE
              annotationType.fqn = "org.springframework.context.annotation.Bean"
            SET
              injectable:Spring:Injectable
            RETURN
              injectable as Injectable
        ]]></cypher>
    </concept>

    <concept id="spring-injection:InjectionPoint">
        <description>Labels all type members annotated with "@org.springframework.beans.factory.annotation.Autowired"
            with
            "Spring" and "InjectionPoint".
        </description>
        <cypher><![CDATA[
            MATCH
              (injectionPoint:Member)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(annotationType:Type)
            WHERE
              annotationType.fqn = "org.springframework.beans.factory.annotation.Autowired"
            SET
              injectionPoint:Spring:InjectionPoint
            RETURN
              injectionPoint as InjectionPoint
        ]]></cypher>
    </concept>

    <constraint id="spring-injection:InjectablesMustNotBeInstantiated">
        <requiresConcept refId="spring-injection:Injectable"/>
        <description>Injectables types must not be instantiated directly (except test code).</description>
        <cypher><![CDATA[
            MATCH
              (injectable:Injectable:Type)-[:DECLARES]->(constructor:Constructor),
              (artifact:Artifact)-[:CONTAINS]->(type:Type)-[:DECLARES]->(method:Method)-[newInstance:INVOKES]->(constructor)
            WHERE NOT
              (has(artifact.type) and artifact.type="test-jar")
            RETURN
              type as Type, method as Method, injectable as Injectable,
              newInstance.lineNumber as LineNumber
        ]]></cypher>
    </constraint>

    <constraint id="spring-injection:FieldInjectionIsNotAllowed">
        <requiresConcept refId="spring-injection:InjectionPoint"/>
        <description>Field injection is not allowed, use Constructor injection instead.</description>
        <cypher><![CDATA[
            MATCH
              (type:Type)-[:DECLARES]->(field:Field:InjectionPoint)
            RETURN
              type as Type, field as Field
        ]]></cypher>
    </constraint>

    <constraint id="spring-injection:FieldsInitializedByConstructorMustNotBeManipulated">
        <requiresConcept refId="spring-injection:Injectable"/>
        <description>Fields of injectable types that are written by a constructor must not be manipulated by
            non-constructor methods.
        </description>
        <cypher><![CDATA[
            MATCH
              (injectable:Injectable),
              (injectable)-[:DECLARES]->(constructor:Constructor)-[:WRITES]->(field:Field),
              (injectable)-[:DECLARES]->(method:Method)-[writes:WRITES]->(field:Field)
            WHERE NOT
               method:Constructor
            RETURN
              injectable as Injectable, method as Method, field as Field, writes.lineNumber as LineNumber
        ]]></cypher>
    </constraint>

    <constraint id="spring-injection:ApplicationTypeMustNotImplementSpringInterface">
        <description>Types declared by the application must not implement interfaces defined by the Spring framework.
        </description>
        <cypher><![CDATA[
            MATCH
              (type:Type)-[:IMPLEMENTS]->(otherType:Type)
            WHERE
              otherType.fqn starts with "org.springframework"
            RETURN
              type as Component, otherType as Interface
        ]]></cypher>
    </constraint>

</jqa:jqassistant-rules>
