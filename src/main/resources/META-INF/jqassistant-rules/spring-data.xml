<jqa:jqassistant-rules xmlns:jqa="http://www.buschmais.com/jqassistant/core/analysis/rules/schema/v1.1">

    <concept id="spring-data:Repository">
        <requiresConcept refId="spring-data:AnnotatedRepository"/>
        <requiresConcept refId="spring-data:ImplementedRepository"/>
        <description>Returns all repositories.</description>
        <cypher><![CDATA[
            MATCH
              (repository:Spring:Repository:Component)
            RETURN
              repository as Repository
        ]]></cypher>
    </concept>
    
    <concept id="spring-data:AnnotatedRepository">
        <description>Labels all types annotated with "org.springframework.stereotype.Repository" with "Spring", "Repository" and "Component".</description>
        <cypher><![CDATA[
            MATCH
              (repository:Type)-[:ANNOTATED_BY]->()-[:OF_TYPE]->(annotationType:Type)
            WHERE
              annotationType.fqn = "org.springframework.stereotype.Repository"
            SET
              repository:Spring:Repository:Component
            RETURN
              repository as Repository
        ]]></cypher>
    </concept>
    
    <concept id="spring-data:ImplementedRepository">
        <description>Labels all types implementing "org.springframework.data.repository.Repository" with "Spring", "Repository" and "Component".</description>
        <cypher><![CDATA[
            MATCH
              (repository:Type)-[:EXTENDS|IMPLEMENTS*]->(superType:Type)
            WHERE
              superType.fqn in [
                "org.springframework.data.repository.Repository"
              ]
            SET
              repository:Spring:Repository:Component
            RETURN
              repository as Repository
        ]]></cypher>
    </concept>

</jqa:jqassistant-rules>
